@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";




    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;

    Html.AddCssFileParts("~/Themes/Store/Content/css/pages/productList.css");


}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@





<ul class="crumbs list-inline hidden-sm hidden-xs">
    <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
        <a itemprop="url" href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")" class="link"><span itemprop="title">@T("Categories.Breadcrumb.Top")</span></a>
        <span class="delimiter">@breadcrumbDelimiter</span>
    </li>
    @foreach (var cat in Model.CategoryBreadcrumb)
    {
        var isLastCategory = cat.Id == Model.Id;
        if (isLastCategory)
        {
            <li>@cat.Name</li>
        }
        else
        {

            <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                <a href="@Url.RouteUrl("Category", new {SeName = cat.SeName})" class="link" title="@cat.Name"><span itemprop="title">@cat.Name</span></a>
                <span class="delimiter">@breadcrumbDelimiter</span>
            </li>

        }

    }
</ul>
@if (this.Request != null && this.Request.UrlReferrer != null && this.Request.UrlReferrer.DnsSafeHost == this.Request.Url.DnsSafeHost)
{
    <a id="goBack" class="visible-sm-inline-block visible-xs-inline-block" onclick="window.history.back();"></a>
}
else
{
    var last = Model.CategoryBreadcrumb.Skip(Model.CategoryBreadcrumb.Count - 2).FirstOrDefault();
    if (last != null && Model.CategoryBreadcrumb.Count > 1)
    {
        <a id="goBack" class="visible-sm-inline-block visible-xs-inline-block" href="@Url.RouteUrl("Category", new {SeName = last.SeName})" title="@last.Name"></a>
    }
    else
    {
        <a id="goBack" class="home visible-sm-inline-block visible-xs-inline-block" href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")"></a>
    }
}
<div class="goods-introduce">
    <h1 class="introduce-name">@Model.Name</h1>
    @Html.Widget("categorydetails_top", Model.Id)
    @*description*@
    @if (!String.IsNullOrWhiteSpace(Model.Description))
    {
        @Html.Raw(Model.Description)
    }
    @Html.Widget("categorydetails_before_subcategories", Model.Id)
</div>

@if (Model.SubCategories.Count > 0)
{
    var col = Model.SubCategories.Count % 4 == 0 ? 3 : (Model.SubCategories.Count == 2 ? 6 : 4);
    var da = new[] {
        new[]{12,12},
        new[]{6,6,12,12},
        new[]{4,4,4,12,6,6},
        new[]{3,3,3,3,12,6,6,12},
        new[]{6,6,4,4,4,12,6,6,6,6},
        new[]{4,4,4,4,4,4,12,6,6,12,6,6},
        new[]{4,4,4,3,3,3,3,12,6,6,12,6,6,12},
        new[]{3,3,3,3,3,3,3,3,12,6,6,6,6,12,6,6},
        new[]{6,6,4,4,4,3,3,3,3,12,6,6,12,6,6,12,6,6},
        new[]{6,6,3,3,3,3,3,3,3,3,12,6,6,6,6,12,6,6,6,6},
        new[]{4,4,4,3,3,3,3,3,3,3,3,12,6,6,6,6,12,6,6,12,6,6},
        new[]{3,3,3,3,3,3,3,3,3,3,3,3,12,6,6,12,6,6,12,6,6,12,6,6},
        new[]{6,6,4,4,4,3,3,3,3,3,3,3,3,12,6,6,6,6,12,6,6,6,6,12,6,6},
    };
    int[] cols;
    if (Model.SubCategories.Count <= da.Length)
    {
        cols = da[Model.SubCategories.Count - 1];
    }
    else
    {
        cols = new int[Model.SubCategories.Count * 2];
        for (var i = 0; i < Model.SubCategories.Count; i++)
        {
            cols[i] = col;
            cols[i + Model.SubCategories.Count] = 6;
        }
    }
    var index = 0;
    <div class="goods-catalogs">
        <div class="catalogs-box-wrapper">
            <div class="row">
                @foreach (var item in Model.SubCategories)
                {

                    <div class="mycol col-md-@cols[index] col-xs-@cols[index + Model.SubCategories.Count]">
                        <div class="box-item">
                            <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title" class="item-container">
                                <div class="item-pic">
                                    <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                </div>
                                <h3 class="item-title">@item.Name</h3>
                            </a>
                        </div>
                    </div>
                    index++;
                }
            </div>
        </div>
    </div>

}
@Html.Widget("categorydetails_before_featured_products", Model.Id)
@if (Model.FeaturedProducts.Count > 0)
{
    <div class="goods-products">
        <div class="products-title">@T("Products.FeaturedProducts")</div>
        <div class="products-box-wrapper">
            <div class="row">
                @foreach (var item in Model.FeaturedProducts)
                {
                    <div class="mycol col-lg-3 col-sm-4 col-xs-6">
                        <div class="box-item">
                            @Html.Partial("_HomePageProductBox", item)
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
}
@Html.Widget("categorydetails_after_featured_products", Model.Id)
@*@if (Model.Products.Count > 0)*@
@*{*@
@*    @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())*@
@*}*@
@Html.Widget("categorydetails_before_filters", Model.Id)
@*todo 筛选器未设置*@
@*<div class="product-filters">*@
@*    $1$filtering#1#*@
@*    @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)*@
@*    {*@
@*        @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())*@
@*    }*@
@*            $1$filtering#1#*@
@*    @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)*@
@*    {*@
@*        @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())*@
@*    }*@
@*</div>*@

@Html.Widget("categorydetails_before_product_list", Model.Id)

@if (Model.Products.Count > 0)
{
    if (Model.PagingFilteringContext.ViewMode == "list")
    {
        <div class="goods-shopping-wrapper">
            <div class="row shopping-row">
                @foreach (var product in Model.Products)
                {
                    @Html.Partial("_ProductBox", product)
                }
            </div>
        </div>
    }
    else
    {
        <div class="goods-products">
            <div class="products-box-wrapper">
                <div class="row">
                    @foreach (var item in Model.Products)
                    {
                        <div class="mycol col-lg-3 col-sm-4 col-xs-6">
                            <div class="box-item">
                                @Html.Partial("_HomePageProductBox", item)
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    }
}

@{
    var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
}
@if (!pager.IsEmpty())
{
    <div class="pager">
        @pager
    </div>
}
@Html.Widget("categorydetails_bottom", Model.Id)

@section left
{
    @Html.Action("PopularProductTags", "Catalog") @*商品标签移动到最上方20190605*@
    @Html.Widget("left_side_column_before")
    @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = Model.Id, currentProductId = 0 })
    @Html.Widget("left_side_column_after_category_navigation")

    @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
    {
        @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
    }
    @*filtering*@
    @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
    {
        @Html.Partial("_MyFilterSpecsBox", Model, new ViewDataDictionary())
    }

    @Html.Action("VendorNavigation", "Catalog")


    @Html.Action("RecentlyViewedProductsBlock", "Product", new { productThumbPictureSize = 100 })
    @*                        @Html.Action("PollBlock", "Poll", new { systemKeyword = "LeftColumnPoll" })*@
    @Html.Action("TopicBlock", "Topic", new { systemName = "LeftAdvisement" })

    @Html.Widget("left_side_column_after")


}