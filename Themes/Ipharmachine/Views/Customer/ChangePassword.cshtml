@model ChangePasswordModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-change-password-page");
    Html.AddCssFileParts("~/Themes/Ipharmachine/Content/css/pages/customer.css");
}
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ChangePassword })
}

<div class="account-number">
    <h1 class="account-title">@T("Account.MyAccount") - @T("Account.ChangePassword")</h1>
    @{
        var validationSummary = Html.ValidationSummary(true);
    }
    @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
    {
        <div class="message-error">@validationSummary</div>
    }
    @using (Html.BeginForm("ChangePassword", "Customer", FormMethod.Post, new { @class = "form-horizontal account-submit" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-container">
            <div class="form-group">
                <label for="@Html.IdFor(m => m.OldPassword)" class="col-sm-4 control-label">
                    @Html.DisplayNameFor(m => m.OldPassword):
                </label>
                <div class="col-sm-4">
                    @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control inputs" })
                    <div class="error tips">@Html.ValidationMessageFor(model => model.OldPassword)</div>
                </div>
            </div>
            <div class="form-group">
                <label for="@Html.IdFor(m => m.NewPassword)" class="col-sm-4 control-label">
                    @Html.DisplayNameFor(m => m.NewPassword):
                </label>
                <div class="col-sm-4">
                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control inputs" })
                    <div class="error tips">@Html.ValidationMessageFor(model => model.NewPassword)</div>
                </div>
            </div>
            <div class="form-group">
                <label for="@Html.IdFor(m => m.ConfirmNewPassword)" class="col-sm-4 control-label">
                    @Html.DisplayNameFor(m => m.ConfirmNewPassword):
                </label>
                <div class="col-sm-4">
                    @Html.PasswordFor(model => model.ConfirmNewPassword, new { @class = "form-control inputs" })
                    <div class="error tips">@Html.ValidationMessageFor(model => model.ConfirmNewPassword)</div>
                </div>
            </div>
            <input type="submit" id="submit" class="buttons" role="button" value="@T("Account.ChangePassword.Button")" />

        </div>

    }

</div>

