@model IList<ProductOverviewModel>

@using Nop.Core
@using Nop.Core.Caching
@using Nop.Core.Infrastructure
@using Nop.Services.Catalog
@using Nop.Services.Directory
@using Nop.Services.Discounts
@using Nop.Web.Models.Catalog;
@using Nop.Services.Configuration;
@if (Model.Count > 0)
{
    var pc = EngineContext.Current.Resolve<IPriceCalculationService>();
    var priceFormatter = EngineContext.Current.Resolve<IPriceFormatter>();
    var currencyService = EngineContext.Current.Resolve<ICurrencyService>();
    var product = EngineContext.Current.Resolve<IProductService>();
    var workContext = EngineContext.Current.Resolve<IWorkContext>();
    <div class="also-bought">
        <h4 class="bought-title">@T("Products.AlsoPurchased")</h4>
        <div class="bought-box-wrapper">
            <div class="row box-row">
                @foreach (var item in Model)
                {
                    var p = product.GetProductById(item.Id);
                    string discountName = null;
                    List<DiscountForCaching> dl;
                    decimal a;
                    string price;
                    if (!p.CallForPrice)
                    {
                        price = priceFormatter.FormatPrice(
                            currencyService.ConvertFromPrimaryStoreCurrency(pc.GetFinalPrice(p, workContext.CurrentCustomer, 0M, true, 1, null, null, out a, out dl), workContext.WorkingCurrency));
                        if (dl != null && dl.Count > 0)
                        {
                            discountName = dl[0].Name;
                        }
                    }
                    else
                    {
                        price = item.ProductPrice.Price;
                    }
                    <div class="mycol col-md-12 col-xs-4">
                        <div class="row box-item">
                            <div class="col-md-5 box-picture">
                                @{
                                    var settingService = EngineContext.Current.Resolve<ISettingService>();
                                    var cdnAddress = settingService.GetSetting("maxcdnsetting.cdnaddress").Value;
                                }
                                <a href="@Url.RouteUrl("Product", new {SeName = item.SeName})" title="@item.DefaultPictureModel.Title"  style="display: block;position: relative;width: 100%;    height: 0;background: #fff;padding-bottom: 100%;">
                                    <img style="position: absolute;top: 0;left: 0;right: 0;bottom: 0;margin: auto;max-width: 100%;max-height: 100%;width: unset;height: unset;"  alt="@item.DefaultPictureModel.AlternateText"  class="lazyload "  src="@(cdnAddress==""?"":cdnAddress)/Themes/Ipharmachine/Content/images/loading.gif" data-original="@item.DefaultPictureModel.ImageUrl" 
                                       title="@item.DefaultPictureModel.Title" />
                                </a>
                            </div>
                            <div class="col-md-7 box-inner">
                                <a href="@Url.RouteUrl("Product", new {SeName = item.SeName})" class="box-linkage">@item.Name</a>
                                <div class="box-price">
                                    @price
                                @if (!String.IsNullOrEmpty(item.ProductPrice.OldPrice))
                                {
                                    <span class="old-price">@item.ProductPrice.OldPrice</span>
                                }
                            </div>
                        </div>

                        @if (discountName != null)
                        {
                            <div class="item-ribbon">
                                <span>@discountName</span>
                            </div>
                        }
                    </div>
                </div>
            }

            </div>
        </div>
    </div>

}