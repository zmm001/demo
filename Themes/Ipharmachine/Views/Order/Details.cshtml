@model OrderDetailsModel
@using Nop.Core.Infrastructure
@using Nop.Services.Orders
@using Nop.Web.Models.Order
@{
    if (!Model.PrintMode)
    {
        Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Print.cshtml";
    }
    //title
    Html.AddTitleParts(T("PageTitle.OrderDetails").Text);
    //page class
    Html.AppendPageCssClassParts("html-order-details-page");
    Html.AddCssFileParts("~/Themes/Ipharmachine/Content/css/pages/myOrderDetails.css");
}
@if (Model.PrintMode)
{
    Html.AddScriptParts(ResourceLocation.Foot, "~/Themes/Ipharmachine/Content/js/extend/print.js");
}

<div class="myOrderDetails">
    <div class="myOrderDetails-title">
        <div class="container">
            <h1>@T("Order.OrderInformation")</h1>
            <div class="comms">
                <a href="@Url.RouteUrl("PrintOrderDetails", new { orderId = Model.Id })" target="_blank" class="button-2 print-order-button">@T("Order.Print")</a>
                @if (!Model.PdfInvoiceDisabled)
                {
                    <a href="@Url.RouteUrl("GetOrderPdfInvoice", new { orderId = Model.Id })" class="button-2 pdf-invoice-button">@T("Order.GetPDFInvoice")</a>
                }
            </div>
        </div>
    </div>
    <div class="container">
        @Html.Widget("orderdetails_page_top", Model.Id)
        <div class="row order-information-container">
            <div class="col-sm-6 order-information">
                <strong class="information-title">@T("Order.Order#")@Model.CustomOrderNumber</strong>
                <ul class="order-overview-content">
                    <li class="order-date">
                        @T("Order.OrderDate"): @Model.CreatedOn.ToString("D")
                    </li>
                    <li class="order-status">
                        @T("Order.OrderStatus"): @Model.OrderStatus
                    </li>
                    <li class="order-total">
                        @T("Order.OrderTotal"): <strong>@Model.OrderTotal</strong>
                    </li>
                </ul>
                @Html.Widget("orderdetails_page_overview", Model.Id)
            </div>
            <div class="col-sm-6 order-information">
                <strong class="information-title">@T("Order.BillingAddress")</strong>
                <ul class="info-list">
                    <li class="name">
                        @Model.BillingAddress.FirstName @Model.BillingAddress.LastName
                    </li>
                    <li class="email">
                        @T("Order.Email"): @Model.BillingAddress.Email
                    </li>
                    @if (Model.BillingAddress.PhoneEnabled)
                    {
                        <li class="phone">
                            @T("Order.Phone"): @Model.BillingAddress.PhoneNumber
                        </li>
                    }
                    @if (Model.BillingAddress.FaxEnabled)
                    {
                        <li class="fax">
                            @T("Order.Fax"): @Model.BillingAddress.FaxNumber
                        </li>
                    }
                    @if (Model.BillingAddress.CompanyEnabled && !String.IsNullOrEmpty(Model.BillingAddress.Company))
                    {
                        <li class="company">
                            @Model.BillingAddress.Company
                        </li>
                    }
                    @if (Model.BillingAddress.StreetAddressEnabled)
                    {
                        <li class="address1">
                            @Model.BillingAddress.Address1
                        </li>
                    }
                    @if (Model.BillingAddress.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.BillingAddress.Address2))
                    {
                        <li class="address2">
                            @Model.BillingAddress.Address2
                        </li>
                    }
                    @if (Model.BillingAddress.CityEnabled ||
                         Model.BillingAddress.StateProvinceEnabled ||
                         Model.BillingAddress.ZipPostalCodeEnabled)
                    {
                        <li class="city-state-zip">
                            @if (Model.BillingAddress.CityEnabled)
                            {
                                @Model.BillingAddress.City
                            }
                            @if (Model.BillingAddress.CityEnabled && (Model.BillingAddress.StateProvinceEnabled || Model.BillingAddress.ZipPostalCodeEnabled))
                            {
                                <text>,</text>
                            }
                            @if (Model.BillingAddress.StateProvinceEnabled)
                            {
                                @Model.BillingAddress.StateProvinceName
                            }
                            @if (Model.BillingAddress.ZipPostalCodeEnabled)
                            {
                                @Model.BillingAddress.ZipPostalCode
                            }
                        </li>
                    }
                    @if (Model.BillingAddress.CountryEnabled && !String.IsNullOrEmpty(Model.BillingAddress.CountryName))
                    {
                        <li class="country">
                            @Model.BillingAddress.CountryName
                        </li>
                    }
                    @if (!String.IsNullOrEmpty(Model.VatNumber))
                    {
                        <li class="vat">
                            <span class="key">
                                @T("Order.VATNumber")
                            </span>
                            <span class="value">
                                @Model.VatNumber
                            </span>
                        </li>
                    }
                    @if (!String.IsNullOrEmpty(Model.BillingAddress.FormattedCustomAddressAttributes))
                    {
                        <li class="custom-attributes-view">
                            @Html.Raw(Model.BillingAddress.FormattedCustomAddressAttributes)
                        </li>
                    }
                    @if (Model.CustomValues != null)
                    {
                        foreach (var item in Model.CustomValues)
                        {
                            <li class="custom-value">
                                <span class="key">
                                    @item.Key:
                                </span>
                                <span class="value">
                                    @(item.Value != null ? item.Value.ToString() : "")
                                </span>
                            </li>
                        }
                    }
                </ul>
            </div>
            @if (!String.IsNullOrEmpty(Model.PaymentMethod))
            {
                <div class="col-sm-6 order-information">
                    <strong class="information-title">@T("Order.Payment")</strong>
                    <ul class="info-list">
                        <li class="payment-method">
                            <span class="key">
                                @T("Order.Payment.Method"):
                            </span>
                            <span class="value">
                                @Model.PaymentMethod
                            </span>
                        </li>
                        @if (!Model.PrintMode)
                        {
                            <li class="payment-method-status">
                                <span class="key">
                                    @T("Order.Payment.Status"):
                                </span>
                                <span class="value">
                                    @Model.PaymentMethodStatus
                                </span>
                            </li>
                        }
                        @if (!Model.PrintMode && Model.CanRePostProcessPayment)
                        {
                            @*Complete payment (for redirection payment methods)*@
                            <li class="repost">
                                @using (Html.BeginRouteForm("OrderDetails", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="submit" name="repost-payment" value="@T("Order.RetryPayment")" class="button-2 re-order-button" />
                                    <p class="hint">
                                        <em>@T("Order.RetryPayment.Hint")</em>
                                    </p>
                                }
                            </li>
                        }
                    </ul>
                </div>
            }
            @if (Model.IsShippable)
            {
                @*<div class="col-sm-6 order-information">
                        <strong class="information-title">@(Model.PickUpInStore ? T("Order.PickupAddress") : T("Order.ShippingAddress"))</strong>
                        <ul class="info-list">
                            @if (!Model.PickUpInStore)
                    {
                                <li class="name">
                                    @Model.ShippingAddress.FirstName @Model.ShippingAddress.LastName
                                </li>
                                <li class="email">
                                    @T("Order.Email"): @Model.ShippingAddress.Email
                                </li>
                                if (Model.ShippingAddress.PhoneEnabled)
                                {
                                    <li class="phone">
                                        @T("Order.Phone"): @Model.ShippingAddress.PhoneNumber
                                    </li>
                                }
                                if (Model.ShippingAddress.FaxEnabled)
                                {
                                    <li class="fax">
                                        @T("Order.Fax"): @Model.ShippingAddress.FaxNumber
                                    </li>
                                }
                                if (Model.ShippingAddress.CompanyEnabled && !String.IsNullOrEmpty(Model.ShippingAddress.Company))
                                {
                                    <li class="company">
                                        @Model.ShippingAddress.Company
                                    </li>
                                }
                                if (Model.ShippingAddress.StreetAddressEnabled)
                                {
                                    <li class="address1">
                                        @Model.ShippingAddress.Address1
                                    </li>
                                }
                                if (Model.ShippingAddress.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.ShippingAddress.Address2))
                                {
                                    <li class="address2">
                                        @Model.ShippingAddress.Address2
                                    </li>
                                }
                                if (Model.ShippingAddress.CityEnabled ||
                                    Model.ShippingAddress.StateProvinceEnabled ||
                                    Model.ShippingAddress.ZipPostalCodeEnabled)
                                {
                                    <li class="city-state-zip">
                                        @if (Model.ShippingAddress.CityEnabled)
                                        {
                                            @Model.ShippingAddress.City
                                        }
                                        @if (Model.ShippingAddress.CityEnabled && (Model.ShippingAddress.StateProvinceEnabled || Model.ShippingAddress.ZipPostalCodeEnabled))
                                        {
                                            <text>,</text>
                                        }
                                        @if (Model.ShippingAddress.StateProvinceEnabled)
                                        {
                                            @Model.ShippingAddress.StateProvinceName
                                        }
                                        @if (Model.ShippingAddress.ZipPostalCodeEnabled)
                                        {
                                            @Model.ShippingAddress.ZipPostalCode
                                        }
                                    </li>
                                }
                                if (Model.ShippingAddress.CountryEnabled && !String.IsNullOrEmpty(Model.ShippingAddress.CountryName))
                                {
                                    <li class="country">
                                        @Model.ShippingAddress.CountryName
                                    </li>
                                }
                                if (!String.IsNullOrEmpty(Model.ShippingAddress.FormattedCustomAddressAttributes))
                                {
                                    <li class="custom-attributes-view">
                                        @Html.Raw(Model.ShippingAddress.FormattedCustomAddressAttributes)
                                    </li>
                                }
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(Model.PickupAddress.Address1))
                                {
                                    <li class="address1">
                                        @Model.PickupAddress.Address1
                                    </li>
                                }
                                if (!string.IsNullOrEmpty(Model.PickupAddress.City) || !string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                {
                                    <li class="city-state-zip">
                                        @if (!string.IsNullOrEmpty(Model.PickupAddress.City))
                                        {
                                            @Model.PickupAddress.City
                                        }
                                        @if (!string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                        {
                                            <text>,</text>
                                            @Model.PickupAddress.ZipPostalCode
                                        }
                                    </li>
                                }
                                if (!string.IsNullOrEmpty(Model.PickupAddress.CountryName))
                                {
                                    <li class="country">
                                        @Model.PickupAddress.CountryName
                                    </li>
                                }
                            }
                        </ul>
                    </div>*@
                <div class="col-sm-6 order-information">
                    <strong class="information-title">@T("Order.Shipping")</strong>
                    <ul class="info-list">
                        <li class="shipping-method">
                            <span class="key">
                                @T("Order.Shipping.Name"):
                            </span>
                            <span class="value">
                                @Model.ShippingMethod
                            </span>
                        </li>
                        @if (!Model.PrintMode)
                        {
                            <li class="shipping-status">
                                <span class="key">
                                    @T("Order.Shipping.Status"):
                                </span>
                                <span class="value">
                                    @Model.ShippingStatus
                                </span>
                            </li>
                        }
                        @Html.Widget("Kuaidi100", Model.Id)
                    </ul>
                </div>
            }

            @if (!Model.PrintMode && Model.Shipments.Count > 0)
            {
                <div class="col-sm-12 order-information">
                    <strong class="infomation-title">@T("Order.Shipments")</strong>
                    <div class="table-containter table-responsive">
                        <table class="table table-striped table-hover">
                            <colgroup>
                                <col width="1" />
                                <col />
                                <col />
                                <col />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="shipment-id">
                                        @T("Order.Shipments.ID")
                                    </th>
                                    <th class="tracking-number">
                                        @T("Order.Shipments.TrackingNumber")
                                    </th>
                                    <th class="shipping-date">
                                        @T("Order.Shipments.ShippedDate")
                                    </th>
                                    <th class="delivery-date">
                                        @T("Order.Shipments.DeliveryDate")
                                    </th>
                                    <th class="view-details">
                                        @T("Order.Shipments.ViewDetails")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Shipments)
                                {
                                    <tr>
                                        <td class="shipment-id">
                                            <span>@item.Id.ToString()</span>
                                        </td>
                                        <td class="tracking-number">
                                            @item.TrackingNumber
                                        </td>
                                        <td class="shipped-date">
                                            @if (item.ShippedDate.HasValue)
                                            {
                                                <span>@item.ShippedDate.Value.ToString("D")</span>
                                            }
                                            else
                                            {
                                                <span>@T("Order.Shipments.ShippedDate.NotYet")</span>
                                            }
                                        </td>
                                        <td class="delivery-date">
                                            @if (item.DeliveryDate.HasValue)
                                            {
                                                <span>@item.DeliveryDate.Value.ToString("D")</span>
                                            }
                                            else
                                            {
                                                <span>@T("Order.Shipments.DeliveryDate.NotYet")</span>
                                            }
                                        </td>
                                        <td class="view-details">
                                            <a href="@Url.RouteUrl("ShipmentDetails", new { shipmentId = item.Id })" title="@T("Order.Shipments.ViewDetails")">@T("Order.Shipments.ViewDetails")</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            @if (Model.Items.Count > 0)
            {
                if (!Model.PrintMode && Model.OrderNotes.Count > 0)
                {
                    <div class="col-sm-6 order-information">
                        <strong class="infomation-title">@T("Order.Notes")</strong>
                        <div class="table-containter">
                            <table class="table table-striped table-hover">
                                <colgroup>
                                    <col />
                                    <col />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="created-on">
                                            @T("Order.Notes.CreatedOn")
                                        </th>
                                        <th class="note">
                                            @T("Order.Notes.Note")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderNotes)
                                    {
                                        <tr>
                                            <td class="created-on">
                                                @item.CreatedOn.ToString()
                                            </td>
                                            <td class="note">
                                                @Html.Raw(item.Note)
                                                @if (item.HasDownload)
                                                {
                                                    <p class="download">
                                                        <a href="@Url.RouteUrl("GetOrderNoteFile", new { ordernoteid = item.Id })">@T("Order.Notes.Download")</a>
                                                    </p>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                @Html.Widget("orderdetails_page_beforeproducts", Model.Id)
            }
        </div>
        @if (Model.Items.Count > 0)
        {
            <div class="cart-products">
                <div class="title greens">@T("Order.Product(s)")</div>
                <table class="table cart-table-inner table-bordered">
                    <thead>
                        <tr>
                            <th>@T("Order.Product(s).Name")</th>
                            <th>@T("Order.Product(s).Price")</th>
                            <th>@T("Order.Product(s).Quantity")</th>
                            <th>@T("Order.Product(s).Total")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {

                            <tr>
                                <td>

                                    @if (!Model.PrintMode)
                                    {
                                        <em><a class="cart-name" href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a></em>
                                    }
                                    else
                                    {
                                        @item.ProductName
                                    }
                                    @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                    {
                                        <div class="cart-specifications">
                                            @Html.Raw(item.AttributeInfo)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.RentalInfo))
                                    {
                                        <div class="rental-info">
                                            @Html.Raw(item.RentalInfo)
                                        </div>
                                    }
                                    @if (item.DownloadId > 0)
                                    {
                                        <div class="download">
                                            <a href="@Url.RouteUrl("GetDownload", new { orderItemId = item.OrderItemGuid })">@T("DownloadableProducts.Fields.Download")</a>
                                        </div>
                                    }
                                    @if (item.LicenseId > 0)
                                    {
                                        <div class="download license">
                                            <a href="@Url.RouteUrl("GetLicense", new {orderItemId = item.OrderItemGuid})">@T("DownloadableProducts.Fields.DownloadLicense")</a>
                                        </div>
                                    }
                                    @Html.Widget("orderdetails_product_line", item.Id)
                                </td>
                                <td>
                                    <span class="price">@item.UnitPrice</span>
                                </td>
                                <td>
                                    <span class="cart-sum">@item.Quantity</span>
                                </td>
                                <td class="cart-total">
                                    <span class="totals">@item.SubTotal</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
        {
            var inclTax = Model.PricesIncludeTax;
            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
            //of course, you can modify appropriate locales to include VAT info there
            <div class="tax-shipping-info">
                @T(inclTax ? "Order.TaxShipping.InclTax" : "Order.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
            </div>
        }
        @Html.Widget("orderdetails_page_afterproducts", Model.Id)
        <div class="section options">
            @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
            {
                <div class="selected-checkout-attributes">
                    @Html.Raw(Model.CheckoutAttributeInfo)
                </div>
            }
        </div>
        <div class="total-details clearfix">
            <table class="info">
                <tbody>
                    <tr>
                        <td>
                            <label>@T("Order.SubTotal"):</label>
                        </td>
                        <td>@Model.OrderSubtotal</td>
                    </tr>
                    @if (!string.IsNullOrEmpty(Model.OrderSubTotalDiscount))
                    {
                        <tr>
                            <td class="cart-total-left">
                                <label>@T("Order.SubTotalDiscount"):</label>
                            </td>
                            <td class="cart-total-right">
                                <span>@Model.OrderSubTotalDiscount</span>
                            </td>
                        </tr>
                    }
                    @if (Model.IsShippable)
                    {
                        <tr>
                            <td class="cart-total-left">
                                <label>@T("Order.Shipping"):</label>
                            </td>
                            <td class="cart-total-right">
                                <span>@Model.OrderShipping</span>
                            </td>
                        </tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
                    {
                        <tr>
                            <td class="cart-total-left">
                                <label>@T("Order.PaymentMethodAdditionalFee"):</label>
                            </td>
                            <td class="cart-total-right">
                                <span>@Model.PaymentMethodAdditionalFee</span>
                            </td>
                        </tr>
                    }
                    @if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
                    {
                        foreach (var taxRate in Model.TaxRates)
                        {
                            <tr>
                                <td class="cart-total-left">
                                    <label>@string.Format(T("Order.TaxRateLine").Text, taxRate.Rate):</label>
                                </td>
                                <td class="cart-total-right">
                                    <span>@taxRate.Value</span>
                                </td>
                            </tr>
                        }
                    }
                    @if (Model.DisplayTax)
                    {
                        <tr>
                            <td class="cart-total-left">
                                <label>@T("Order.Tax"):</label>
                            </td>
                            <td class="cart-total-right">
                                <span>@Model.Tax</span>
                            </td>
                        </tr>
                    }
                    @if (!string.IsNullOrEmpty(Model.OrderTotalDiscount))
                    {
                        <tr>
                            <td class="cart-total-left">
                                <label>@T("Order.TotalDiscount"):</label>
                            </td>
                            <td class="cart-total-right">
                                <span>@Model.OrderTotalDiscount</span>
                            </td>
                        </tr>
                    }
                    @if (Model.GiftCards.Count > 0)
                    {
                        foreach (var gc in Model.GiftCards)
                        {
                            <tr>
                                <td class="cart-total-left">
                                    <label>@string.Format(T("Order.GiftCardInfo").Text, gc.CouponCode):</label>
                                </td>
                                <td class="cart-total-right">
                                    <span>@gc.Amount</span>
                                </td>
                            </tr>
                        }
                    }
                    @if (Model.RedeemedRewardPoints > 0)
                    {
                        <tr>
                            <td class="cart-total-left">
                                <label>@string.Format(T("Order.RewardPoints").Text, Model.RedeemedRewardPoints):</label>
                            </td>
                            <td class="cart-total-right">
                                <span>@Model.RedeemedRewardPointsAmount</span>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td class="cart-total-left">
                            <label>@T("Order.OrderTotal"):</label>
                        </td>
                        <td class="cart-total-right">
                            <span><strong>@Model.OrderTotal</strong></span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
@{
    var orderService = EngineContext.Current.Resolve<IOrderService>();
    var order = orderService.GetOrderById(Model.Id);
    //.First().Product.Gtin
}
<script src="https://apis.google.com/js/platform.js?onload=renderOptIn" async defer></script>
<script>
    window.renderOptIn = function() {
        window.gapi.load('surveyoptin', function() {
            window.gapi.surveyoptin.render(
                {
                    // REQUIRED FIELDS
                    "merchant_id": 130758629,
                    "order_id": "@Model.Id",
                    "email": "@order.BillingAddress.Email",
                    "delivery_country": "@order.BillingAddress.Country.TwoLetterIsoCode",
                    "estimated_delivery_date": "@DateTime.Now.AddDays(4).ToString("yyyy-MM-dd")"
                    @if (order.OrderItems.Any(oi => !string.IsNullOrWhiteSpace(oi.Product.Gtin)))
                    {
                        <text>
                    ,"products": [@order.OrderItems.Aggregate("", (seed, oi) => seed + (string.IsNullOrEmpty(oi.Product.Gtin) ? "" : "{\"gtin\":\"" + oi.Product.Gtin + "\"},")).TrimEnd(',')]
                        </text>
                    }
                });
        });
    }
</script>